buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'de.undercouch.download' version '4.0.2'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

def versions = [
    java: '11',
    guava: '28.1-jre',
    junit: '5.5.2'
]

sourceCompatibility = versions.java

repositories {
    mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-oauth2-client"
    implementation "org.springframework.security:spring-security-oauth2-jose"
    implementation "org.springframework.session:spring-session-jdbc"
    implementation "com.google.guava:guava:${versions.guava}"
	runtimeOnly "org.postgresql:postgresql"
    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${versions.junit}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${versions.junit}"
}

sourceSets {
    dev {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    devImplementation.extendsFrom implementation
    devRuntimeOnly.extendsFrom runtimeOnly
}

task runServer(type: JavaExec) {
    classpath = sourceSets.dev.runtimeClasspath
    main = 'org.eclipse.openvsx.RegistryApplication'
}

test {
    useJUnitPlatform()
}

apply from: "test-extensions.gradle"
